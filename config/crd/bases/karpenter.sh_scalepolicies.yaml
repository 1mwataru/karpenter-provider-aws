
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: scalepolicies.karpenter.sh
spec:
  group: karpenter.sh
  names:
    kind: ScalePolicy
    listKind: ScalePolicyList
    plural: scalepolicies
    singular: scalepolicy
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ScalePolicy is the Schema for the scalepolicies API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ScalePolicySpec defines the desired state of ScalePolicy
          properties:
            maxReplicas:
              format: int32
              type: integer
            minReplicas:
              format: int32
              type: integer
            selector:
              additionalProperties:
                type: string
              type: object
            sqsQueuePolicy:
              description: SQSQueueMetric defines a scale policy that reacts to the
                length of a queue and preemptively scales out
              properties:
                messagesPerNode:
                  format: int32
                  type: integer
              required:
              - messagesPerNode
              type: object
            utilizationPolicy:
              description: UtilizationMetric defines a thermostat-like scaler for
                CPU, Memory, or Custom Resource types (i.e. GPU)
              properties:
                cpuThreshhold:
                  description: TODO, make this a map of resource type -> threshold
                    a.la resource requests
                  format: int32
                  type: integer
                memoryThreshhold:
                  format: int32
                  type: integer
                podThreshhold:
                  format: int32
                  type: integer
              required:
              - cpuThreshhold
              - memoryThreshhold
              - podThreshhold
              type: object
          required:
          - maxReplicas
          - minReplicas
          type: object
        status:
          description: ScalePolicyStatus defines the observed state of ScalePolicy
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
